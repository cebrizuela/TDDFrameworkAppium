<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAP1180" failures="0" tests="3" name="Pixel_2" time="4.153" errors="0" timestamp="2022-05-20T10:50:10 UYT">
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.556">
    <failure type="java.lang.IllegalArgumentException" message="Can not set io.appium.java_client.MobileElement field com.qa.pages.LoginPage.usernameTxtFld to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4">
      <![CDATA[java.lang.IllegalArgumentException: Can not set io.appium.java_client.MobileElement field com.qa.pages.LoginPage.usernameTxtFld to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:117)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at com.qa.BaseTest.<init>(BaseTest.java:45)
at com.qa.pages.LoginPage.<init>(LoginPage.java:9)
at com.qa.tests.LoginTests.beforeMethod(LoginTests.java:68)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653054609806E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.653054609812E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653054609826E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.65305460983E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653054609841E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="-1.653054609843E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="-1.653054609865E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
</testsuite> <!-- Pixel_2 -->
