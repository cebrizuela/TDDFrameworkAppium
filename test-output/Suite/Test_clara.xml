<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="LAP0341.local" failures="0" tests="6" name="Test_clara" time="0.717" errors="0" timestamp="2022-05-29T01:39:02 UYT">
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeClass beforeClass" time="0.007">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.InteractsWithApps.closeApp()&amp;quot; because &amp;quot;com.qa.BaseTest.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.InteractsWithApps.closeApp()" because "com.qa.BaseTest.driver" is null
at com.qa.BaseTest.closeApp(BaseTest.java:267)
at com.qa.tests.LoginTests.beforeClass(LoginTests.java:53)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.653799142599E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.653799142601E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653799142606E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.653799142607E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.653799142609E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.653799142611E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653799142614E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.653799142616E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.653799142618E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.653799142619E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.653799142623E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.653799142624E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="-1.653799142626E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen()&amp;quot; because &amp;quot;com.qa.BaseTest.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen()" because "com.qa.BaseTest.driver" is null
at com.qa.BaseTest.beforeMethod(BaseTest.java:70)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LogoutTest" name="@BeforeMethod beforeMethod" time="-1.653799142631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LogoutTest" name="@AfterMethod afterMethod" time="-1.653799142637E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.653799142638E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LogoutTest" name="@AfterClass afterClass" time="-1.653799142639E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.ProductTest" name="@BeforeClass beforeClass" time="0.002">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.InteractsWithApps.closeApp()&amp;quot; because &amp;quot;com.qa.BaseTest.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.InteractsWithApps.closeApp()" because "com.qa.BaseTest.driver" is null
at com.qa.BaseTest.closeApp(BaseTest.java:267)
at com.qa.tests.ProductTest.beforeClass(ProductTest.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.653799142645E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTest" name="@BeforeMethod beforeMethod" time="-1.653799142647E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTest" name="@AfterMethod afterMethod" time="-1.653799142659E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.65379914266E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.653799142662E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTest" name="@BeforeMethod beforeMethod" time="-1.653799142664E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTest" name="@AfterMethod afterMethod" time="-1.653799142668E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.653799142669E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTest" name="@AfterClass afterClass" time="-1.65379914267E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="-1.653799142673E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
  <testcase classname="com.qa.tests.LogoutTest" name="successfulLogout" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogout -->
  <testcase classname="com.qa.tests.ProductTest" name="validateProductOnProductDetails" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductDetails -->
  <testcase classname="com.qa.tests.ProductTest" name="validateProductOnProductPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductPage -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
</testsuite> <!-- Test_clara -->
