<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="10" passed="4" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screeshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductDetails.png'> <img src='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductDetails.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screeshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductPage.png'> <img src='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductPage.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-06T23:51:27 UYT" name="Suite" finished-at="2022-06-06T23:52:28 UYT" duration-ms="61290">
    <groups>
    </groups>
    <test started-at="2022-06-06T23:51:27 UYT" name="Test_clara" finished-at="2022-06-06T23:52:28 UYT" duration-ms="61290">
      <class name="com.qa.tests.LogoutTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:50 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:51 UYT" duration-ms="478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:50 UYT" name="beforeClass" finished-at="2022-06-06T23:51:50 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:51 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:51 UYT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LogoutTest.successfulLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogout()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:51 UYT" name="successfulLogout" finished-at="2022-06-06T23:51:54 UYT" duration-ms="3503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogout -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:54 UYT" name="afterMethod" finished-at="2022-06-06T23:51:55 UYT" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogout status=SUCCESS method=LogoutTest.successfulLogout()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:54 UYT" name="afterMethod" finished-at="2022-06-06T23:51:54 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LogoutTest@3e27ba32]" started-at="2022-06-06T23:51:55 UYT" name="afterClass" finished-at="2022-06-06T23:51:55 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.qa.tests.LogoutTest -->
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:27 UYT" name="beforeTest" finished-at="2022-06-06T23:51:32 UYT" duration-ms="5416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pixel_2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pixel5_Android11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:33 UYT" name="beforeClass" finished-at="2022-06-06T23:51:34 UYT" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:34 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:34 UYT" duration-ms="487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:34 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:34 UYT" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:34 UYT" name="invalidPassword" finished-at="2022-06-06T23:51:39 UYT" duration-ms="4640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:39 UYT" name="afterMethod" finished-at="2022-06-06T23:51:39 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:39 UYT" name="afterMethod" finished-at="2022-06-06T23:51:40 UYT" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTests.invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:40 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:40 UYT" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:40 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:40 UYT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:40 UYT" name="invalidUserName" finished-at="2022-06-06T23:51:44 UYT" duration-ms="3264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:44 UYT" name="afterMethod" finished-at="2022-06-06T23:51:44 UYT" duration-ms="837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=SUCCESS method=LoginTests.invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:44 UYT" name="afterMethod" finished-at="2022-06-06T23:51:44 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:44 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:45 UYT" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:45 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:45 UYT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:45 UYT" name="successfulLogin" finished-at="2022-06-06T23:51:50 UYT" duration-ms="4675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:50 UYT" name="afterMethod" finished-at="2022-06-06T23:51:50 UYT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:50 UYT" name="afterMethod" finished-at="2022-06-06T23:51:50 UYT" duration-ms="842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogin status=SUCCESS method=LoginTests.successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:51:50 UYT" name="afterClass" finished-at="2022-06-06T23:51:50 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@6e6f2380]" started-at="2022-06-06T23:52:28 UYT" name="afterTest" finished-at="2022-06-06T23:52:28 UYT" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
      <class name="com.qa.tests.ProductTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:51:55 UYT" name="beforeClass" finished-at="2022-06-06T23:51:58 UYT" duration-ms="2824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:51:58 UYT" name="beforeMethod" finished-at="2022-06-06T23:51:59 UYT" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:51:59 UYT" name="beforeMethod" finished-at="2022-06-06T23:52:02 UYT" duration-ms="3701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTest.validateProductOnProductDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateProductOnProductDetails()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:02 UYT" name="validateProductOnProductDetails" finished-at="2022-06-06T23:52:15 UYT" duration-ms="12907" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.qa.BaseTest.waitForVisibility(BaseTest.java:232)
at com.qa.BaseTest.getAttribute(BaseTest.java:251)
at com.qa.BaseTest.getText(BaseTest.java:258)
at com.qa.pages.ProductDetailsPage.getProductDescriptionText(ProductDetailsPage.java:35)
at com.qa.tests.ProductTest.validateProductOnProductDetails(ProductTest.java:127)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.isDisplayed(<generated>)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 28 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@5c585bec (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 35 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAT00145.local', ip: '2800:a4:2925:7f00:bc68:add3:b7be:3a22%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.4', java.version: '11.0.15'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 37 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screeshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductDetails.png'> <img src='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductDetails.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProductOnProductDetails -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:16 UYT" name="afterMethod" finished-at="2022-06-06T23:52:18 UYT" duration-ms="1783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:18 UYT" name="afterMethod" finished-at="2022-06-06T23:52:19 UYT" duration-ms="1026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProductOnProductDetails status=FAILURE method=ProductTest.validateProductOnProductDetails()[pri:0, instance:com.qa.tests.ProductTest@7ef82753] output=This is the sample screeshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:19 UYT" name="beforeMethod" finished-at="2022-06-06T23:52:19 UYT" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:19 UYT" name="beforeMethod" finished-at="2022-06-06T23:52:23 UYT" duration-ms="3347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTest.validateProductOnProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateProductOnProductPage()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:23 UYT" name="validateProductOnProductPage" finished-at="2022-06-06T23:52:24 UYT" duration-ms="1234" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Sauce Labs Backpack] but found [Sauce Labs BackpackTest falla]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Sauce Labs Backpack] but found [Sauce Labs BackpackTest falla]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.qa.tests.ProductTest.validateProductOnProductPage(ProductTest.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screeshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductPage.png'> <img src='/Users/clara.brizuela/Library/CloudStorage/OneDrive-Perficient,Inc/Repositorio/TDDFrameworkAppium/Screenshots/Android_pixel_2_/2022-06-06-23-51-27/ProductTest/validateProductOnProductPage.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProductOnProductPage -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:24 UYT" name="afterMethod" finished-at="2022-06-06T23:52:26 UYT" duration-ms="2068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:26 UYT" name="afterMethod" finished-at="2022-06-06T23:52:28 UYT" duration-ms="1553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProductOnProductPage status=FAILURE method=ProductTest.validateProductOnProductPage()[pri:0, instance:com.qa.tests.ProductTest@7ef82753] output=This is the sample screeshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.ProductTest@7ef82753]" started-at="2022-06-06T23:52:28 UYT" name="afterClass" finished-at="2022-06-06T23:52:28 UYT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.qa.tests.ProductTest -->
    </test> <!-- Test_clara -->
  </suite> <!-- Suite -->
</testng-results>
